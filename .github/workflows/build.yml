name: Build FLUJO Application

on:
  push:
    branches:
      - feature/server
  pull_request:
    branches:
      - feature/server
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

# Add permissions at workflow level
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: Install dependencies (without Electron)
        run: |
          HEADLESS_SERVER=true FORCE_SERVER_MODE=true npm install --production=false --no-optional
      
      - name: Temporarily rename Babel config files for Next.js build
        run: |
          mv .babelrc .babelrc.backup || true
          mv babel.config.js babel.config.js.backup || true
      
      - name: Build application
        run: |
          npm run build:ci
      
      - name: Restore Babel config files
        run: |
          mv .babelrc.backup .babelrc || true
          mv babel.config.js.backup babel.config.js || true
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flujo-build
          path: |
            .next/
            package.json
            scripts/headless-server.js
            public/
            next.config.ts
          retention-days: 7
          
  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'feature/server')
    
    steps:
      - name: Debug GitHub context
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "GitHub ref: ${{ github.ref }}"
          echo "Comparison result: ${{ contains(github.ref, 'feature/server') }}"
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: flujo-build
          path: flujo-build
      
      - name: Create deployment archive
        run: |
          cd flujo-build
          tar -czvf ../flujo-server-build.tar.gz .
      
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: flujo-server-build.tar.gz
          name: FLUJO Server Build ${{ github.run_number }}
          tag_name: server-build-v${{ github.run_number }}
          body: |
            Server build of FLUJO (no Electron dependencies)
            
            ## Installation
            ```bash
            # Extract the build
            tar -xzvf flujo-server-build.tar.gz
            
            # Install dependencies
            cd flujo-build
            npm install --production
            
            # Start the server
            NODE_ENV=production node scripts/headless-server.js --network
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 