name: Build FLUJO Application

on:
  push:
    branches:
      - feature/server
  pull_request:
    branches:
      - feature/server
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

# Add permissions at workflow level
permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: feature/server  # Explicitly checkout feature/server branch
      
      - name: Verify branch
        run: |
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          echo "Current branch: $CURRENT_BRANCH"
          if [[ "$CURRENT_BRANCH" != "feature/server" ]]; then
            echo "Error: Not on feature/server branch"
            exit 1
          fi
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies (without Electron)
        run: |
          HEADLESS_SERVER=true FORCE_SERVER_MODE=true npm install --production=false --no-optional
      
      - name: Temporarily rename Babel config files for Next.js build
        run: |
          mv .babelrc .babelrc.backup || true
          mv babel.config.js babel.config.js.backup || true
      
      - name: Build application
        run: |
          HEADLESS_SERVER=true FORCE_SERVER_MODE=true npm run build:ci
      
      - name: Restore Babel config files
        run: |
          mv .babelrc.backup .babelrc || true
          mv babel.config.js.backup babel.config.js || true
      
      - name: Verify build output
        run: |
          if [ ! -d ".next" ]; then
            echo "Error: .next directory not found. Build failed."
            exit 1
          fi
          echo "Build directory contents:"
          ls -la .next/
          echo "Total size of .next directory:"
          du -sh .next/
      
      # Create a comprehensive deployment package
      - name: Create deployment archive directly
        run: |
          # Create a directory for all files
          mkdir -p build_output
          
          # Copy all essential directories and files
          cp -r .next build_output/next
          cp -r scripts build_output/
          cp -r public build_output/
          cp -r docs build_output/ || true
          
          # Create db directory if it doesn't exist
          mkdir -p build_output/db
          
          # Config files
          cp package.json build_output/
          cp next.config.ts build_output/
          cp server.js build_output/ || true
          
          # Additional config files if they exist
          cp jsconfig.json build_output/ || true
          cp tsconfig.json build_output/ || true
          
          # Add LICENSE and README files
          cp LICENSE build_output/ || true
          cp README.md build_output/ || true
          cp SERVER.md build_output/ || true
          
          # Create package.json info for dependency installation
          npm ls --prod --json > build_output/package-tree.json
          
          # Add node_modules/.package-lock.json if it exists
          if [ -f "node_modules/.package-lock.json" ]; then
            cp node_modules/.package-lock.json build_output/
          fi
          
          # Create an installation script for convenience
          cat > build_output/setup.sh << 'EOF'
          #!/bin/bash
          # Setup script for FLUJO Server
          
          # Create symlink for Next.js directory if needed
          if [ ! -L ".next" ] && [ -d "next" ]; then
            ln -s next .next
          fi
          
          # Install dependencies
          echo "Installing production dependencies..."
          npm install --production
          
          echo "Setup complete! Start the server with:"
          echo "NODE_ENV=production node scripts/headless-server.js --network"
          EOF
          
          # Make it executable
          chmod +x build_output/setup.sh
          
          # List all files before archiving
          echo "Contents being archived:"
          find build_output -type f | sort
          
          # Create tarball directly
          cd build_output
          tar -czvf ../flujo-server-build.tar.gz .
          cd ..
          
          # Verify the archive
          echo "Archive file size:"
          ls -la flujo-server-build.tar.gz
          
          # Test extract to verify contents
          mkdir -p test-extract
          tar -xzvf flujo-server-build.tar.gz -C test-extract
          
          echo "Extracted contents:"
          find test-extract -type f | sort
          
          echo "Checking for 'next' directory..."
          if [ ! -d "test-extract/next" ]; then
            echo "ERROR: 'next' directory is missing from the archive"
            exit 1
          fi
          
          echo "Size of next directory:"
          du -sh test-extract/next/
      
      # Only create the release if we're on feature/server and it's a push event
      - name: Create GitHub Release
        if: github.event_name == 'push' && contains(github.ref, 'feature/server')
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: flujo-server-build.tar.gz
          name: FLUJO Server Build ${{ github.run_number }}
          tag_name: server-build-v${{ github.run_number }}
          body: |
            Server build of FLUJO (no Electron dependencies)
            Built from feature/server branch.
            
            ## Installation
            ```bash
            # Extract the build
            tar -xzvf flujo-server-build.tar.gz
            
            # Run the setup script (installs dependencies and creates symlinks)
            ./setup.sh
            
            # Start the server
            NODE_ENV=production node scripts/headless-server.js --network
            ```
            
            ## Note
            The Next.js build directory is renamed from `.next` to `next` in this package.
            The setup script will create the necessary symlink automatically.
            
            ## Build Information
            - Build Number: ${{ github.run_number }}
            - Commit: ${{ github.sha }}
            - Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 